// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int     @id
  name            String? @unique
  status          eStatus @default(OFFLINE)
  image           String?
  avatar          String?
  friendIds       Int[]
  bannedIds       Int[]
  wins            Game[]  @relation("win")
  loses           Game[]  @relation("lose")
  score           Int     @default(0)
  token           Token?  @relation("token", fields: [tokenId], references: [id])
  tokenId         Int?   @unique
  refreshToken    String?
  twoFaSecret     String?
  isTwoFaEnabled  Boolean @default(false)
  channels        Channel[]
}

model Game {
  id          Int     @default(autoincrement()) @id
  winner      User    @relation("win", fields: [winnerId], references: [id])
  winnerId    Int
  winnerScore Int
  loser       User    @relation("lose",fields: [loserId], references: [id])
  loserId     Int
  loserScore  Int
}

model Token {
  id            Int     @default(autoincrement()) @id
  access_token  String @unique
  token_type    String
  expires_in    Int 
  refresh_token String
  scope         String
  created_at    Int
  owner         User?   @relation("token")
}

model Channel {
  name      String        @unique @id
  ownerId   Int
  password  String?
  guests    User[]
  admIds    Int[]
  mutedIds  Int[]
  bannedIds Int[]       
  isPrivate Boolean       @default(false)
  type      eChannelType  @default(GENERAL)
  messages  Message[]     @relation()
}

model Message {
  id          Int       @default(autoincrement()) @id
  channel     Channel   @relation(fields: [channelName], references: [name])
  channelName String    
  sentAt      DateTime  @default(now())
  authorName  String
  text        String
}

enum eStatus {
  OFFLINE
  ONLINE
  ONGAME
}

enum eChannelType {
  GENERAL
  PRIVATE_MESSAGING
}